import { InjectionToken, Injectable, Inject, NgZone, NgModule } from '@angular/core';
import { Subject } from 'rxjs';

import * as ɵngcc0 from '@angular/core';
const CONFIGURATION = new InjectionToken('CONFIGURATION');

class NgOneTapService {
    constructor(envConfig, ngZone) {
        this.envConfig = envConfig;
        this.ngZone = ngZone;
        this._promtMoment = new Subject();
        this._oneTapCredentialResponse = new Subject();
        this._authUserResponse = new Subject();
    }
    get promtMoment() {
        return this._promtMoment.asObservable();
    }
    get oneTapCredentialResponse() {
        return this._oneTapCredentialResponse.asObservable();
    }
    get authUserResponse() {
        return this._authUserResponse.asObservable();
    }
    tapInitialize(config) {
        window.onload = () => {
            this.tapRender(config);
        };
        if (document.readyState == 'complete') {
            this.tapRender(config);
        }
    }
    tapRender(config) {
        const conf = Object.assign(Object.assign({}, this.envConfig), config);
        if (!!(conf === null || conf === void 0 ? void 0 : conf.disable_exponential_cooldowntime)) {
            document.cookie = 'g_state' + '=;Path=/;';
        }
        window.google.accounts.id.initialize(Object.assign(Object.assign({}, conf), { callback: (auth) => {
                this.ngZone.run(() => {
                    if (!!conf.authvalidate_by_googleapis) {
                        const http = new XMLHttpRequest();
                        const url = `https://oauth2.googleapis.com/tokeninfo?id_token=${auth.credential}`;
                        http.open('GET', url);
                        http.send();
                        http.onreadystatechange = () => {
                            if (http.readyState == 4 && http.status == 200) {
                                this._authUserResponse.next(JSON.parse(http.responseText));
                            }
                        };
                    }
                    this._oneTapCredentialResponse.next(auth);
                });
            } }));
        window.google.accounts.id.prompt((pmt) => {
            this._promtMoment.next(pmt);
        });
    }
    signOut() {
        window.google.accounts.id.disableAutoSelect();
    }
    cancelTheTap() {
        window.google.accounts.id.cancel();
    }
}
NgOneTapService.ɵfac = function NgOneTapService_Factory(t) { return new (t || NgOneTapService)(ɵngcc0.ɵɵinject(CONFIGURATION), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };
NgOneTapService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgOneTapService, factory: NgOneTapService.ɵfac });
NgOneTapService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [CONFIGURATION,] }] },
    { type: NgZone }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOneTapService, [{
        type: Injectable
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [CONFIGURATION]
            }] }, { type: ɵngcc0.NgZone }]; }, null); })();

class NgGoogleOneTapModule {
    constructor() {
        let oneTapLib = document.createElement('script');
        oneTapLib.async = true;
        oneTapLib.src = 'https://accounts.google.com/gsi/client';
        document.head.appendChild(oneTapLib);
    }
    static config(config) {
        return {
            ngModule: NgGoogleOneTapModule,
            providers: [
                { provide: CONFIGURATION, useValue: config },
                NgOneTapService
            ]
        };
    }
}
NgGoogleOneTapModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgGoogleOneTapModule });
NgGoogleOneTapModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgGoogleOneTapModule_Factory(t) { return new (t || NgGoogleOneTapModule)(); }, imports: [[]] });
NgGoogleOneTapModule.ctorParameters = () => [];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgGoogleOneTapModule, [{
        type: NgModule,
        args: [{
                declarations: [],
                imports: [],
                exports: []
            }]
    }], function () { return []; }, null); })();

/*
 * Public API Surface of ng-google-one-tap
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgGoogleOneTapModule, NgOneTapService, CONFIGURATION as ɵa };

//# sourceMappingURL=ng-google-one-tap.js.map