import { AfterContentInit, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy } from '@angular/core';
import { Observable } from 'rxjs';
import { Hooks, StateChange } from './types';
import * as ɵngcc0 from '@angular/core';
export declare class LazyLoadImageDirective implements OnChanges, AfterContentInit, OnDestroy {
    lazyImage: string;
    defaultImage?: string;
    errorImage?: string;
    scrollTarget?: any;
    customObservable?: Observable<any>;
    offset?: number;
    useSrcset?: boolean;
    decode?: boolean;
    debug?: boolean;
    onStateChange: EventEmitter<StateChange>;
    private propertyChanges$;
    private elementRef;
    private ngZone;
    private loadSubscription?;
    private debugSubscription?;
    private hooks;
    private uid;
    constructor(el: ElementRef, ngZone: NgZone, platformId: Object, hooks: Hooks);
    ngOnChanges(): void;
    ngAfterContentInit(): any;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LazyLoadImageDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LazyLoadImageDirective, "[lazyLoad]", never, { "lazyImage": "lazyLoad"; "defaultImage": "defaultImage"; "errorImage": "errorImage"; "scrollTarget": "scrollTarget"; "customObservable": "customObservable"; "offset": "offset"; "useSrcset": "useSrcset"; "decode": "decode"; "debug": "debug"; }, { "onStateChange": "onStateChange"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF6eWxvYWQtaW1hZ2UuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImxhenlsb2FkLWltYWdlLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlckNvbnRlbnRJbml0LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE5nWm9uZSwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEhvb2tzLCBTdGF0ZUNoYW5nZSB9IGZyb20gJy4vdHlwZXMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTGF6eUxvYWRJbWFnZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgQWZ0ZXJDb250ZW50SW5pdCwgT25EZXN0cm95IHtcbiAgICBsYXp5SW1hZ2U6IHN0cmluZztcbiAgICBkZWZhdWx0SW1hZ2U/OiBzdHJpbmc7XG4gICAgZXJyb3JJbWFnZT86IHN0cmluZztcbiAgICBzY3JvbGxUYXJnZXQ/OiBhbnk7XG4gICAgY3VzdG9tT2JzZXJ2YWJsZT86IE9ic2VydmFibGU8YW55PjtcbiAgICBvZmZzZXQ/OiBudW1iZXI7XG4gICAgdXNlU3Jjc2V0PzogYm9vbGVhbjtcbiAgICBkZWNvZGU/OiBib29sZWFuO1xuICAgIGRlYnVnPzogYm9vbGVhbjtcbiAgICBvblN0YXRlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8U3RhdGVDaGFuZ2U+O1xuICAgIHByaXZhdGUgcHJvcGVydHlDaGFuZ2VzJDtcbiAgICBwcml2YXRlIGVsZW1lbnRSZWY7XG4gICAgcHJpdmF0ZSBuZ1pvbmU7XG4gICAgcHJpdmF0ZSBsb2FkU3Vic2NyaXB0aW9uPztcbiAgICBwcml2YXRlIGRlYnVnU3Vic2NyaXB0aW9uPztcbiAgICBwcml2YXRlIGhvb2tzO1xuICAgIHByaXZhdGUgdWlkO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCBuZ1pvbmU6IE5nWm9uZSwgcGxhdGZvcm1JZDogT2JqZWN0LCBob29rczogSG9va3MpO1xuICAgIG5nT25DaGFuZ2VzKCk6IHZvaWQ7XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IGFueTtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19