{"version":3,"file":"angular-google-tag-manager.js","sources":["../../../projects/angular-google-tag-manager/src/lib/angular-google-tag-manager.service.ts","../../../projects/angular-google-tag-manager/src/lib/angular-google-tag-manager.module.ts","../../../projects/angular-google-tag-manager/src/public-api.ts","../../../projects/angular-google-tag-manager/src/angular-google-tag-manager.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable, Optional } from '@angular/core';\nimport { GoogleTagManagerConfig } from './google-tag-manager-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GoogleTagManagerService {\n  private isLoaded = false;\n\n  private browserGlobals = {\n    windowRef(): any {\n      return window;\n    },\n    documentRef(): any {\n      return document;\n    },\n  };\n\n  constructor(\n    @Optional()\n    @Inject('googleTagManagerConfig')\n    public config: GoogleTagManagerConfig = { id: null },\n    @Optional() @Inject('googleTagManagerId') public googleTagManagerId: string,\n    @Optional()\n    @Inject('googleTagManagerAuth')\n    public googleTagManagerAuth: string,\n    @Optional()\n    @Inject('googleTagManagerPreview')\n    public googleTagManagerPreview: string,\n    @Optional()\n    @Inject('googleTagManagerResourcePath')\n    public googleTagManagerResourcePath: string,\n    @Optional()\n    @Inject('googleTagManagerCSPNonce')\n    public googleTagManagerCSPNonce: string\n  ) {\n    if (this.config == null) {\n      this.config = { id: null };\n    }\n\n    this.config = {\n      ...this.config,\n      id: googleTagManagerId || this.config.id,\n      gtm_auth: googleTagManagerAuth || this.config.gtm_auth,\n      gtm_preview: googleTagManagerPreview || this.config.gtm_preview,\n      gtm_resource_path: googleTagManagerResourcePath || this.config.gtm_resource_path\n    };\n    if (this.config.id == null) {\n      throw new Error('Google tag manager ID not provided.');\n    }\n  }\n\n  public getDataLayer(): any[] {\n    const window = this.browserGlobals.windowRef();\n    window.dataLayer = window.dataLayer || [];\n    return window.dataLayer;\n  }\n\n  private pushOnDataLayer(obj: object): void {\n    const dataLayer = this.getDataLayer();\n    dataLayer.push(obj);\n  }\n\n  public addGtmToDom(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (this.isLoaded) {\n        return resolve(this.isLoaded);\n      }\n      const doc = this.browserGlobals.documentRef();\n      this.pushOnDataLayer({\n        'gtm.start': new Date().getTime(),\n        event: 'gtm.js',\n      });\n\n      const gtmScript = doc.createElement('script');\n      gtmScript.id = 'GTMscript';\n      gtmScript.async = true;\n      gtmScript.src = this.applyGtmQueryParams(\n        this.config.gtm_resource_path ? this.config.gtm_resource_path : 'https://www.googletagmanager.com/gtm.js'\n      );\n      gtmScript.addEventListener('load', () => {\n        return resolve(this.isLoaded = true);\n      });\n      gtmScript.addEventListener('error', () => {\n        return reject(false);\n      });\n      if (this.googleTagManagerCSPNonce) {\n        gtmScript.setAttribute('nonce', this.googleTagManagerCSPNonce);\n      }\n      doc.head.insertBefore(gtmScript, doc.head.firstChild);\n    });\n  }\n\n  public pushTag(item: object): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      if (!this.isLoaded) {\n        this.addGtmToDom().then(() => {\n          this.pushOnDataLayer(item);\n          return resolve();\n        }).catch(() => reject());\n      } else {\n        this.pushOnDataLayer(item);\n        return resolve();\n      }\n    });\n  }\n\n  private applyGtmQueryParams(url: string): string {\n    if (url.indexOf('?') === -1) {\n      url += '?';\n    }\n\n    return (\n      url +\n      Object.keys(this.config)\n        .filter((k) => this.config[k])\n        .map((k) => `${k}=${this.config[k]}`)\n        .join('&')\n    );\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { GoogleTagManagerConfig } from './google-tag-manager-config';\n\n@NgModule()\nexport class GoogleTagManagerModule {\n  public static forRoot(\n    config: GoogleTagManagerConfig\n  ): ModuleWithProviders<GoogleTagManagerModule> {\n    return {\n      ngModule: GoogleTagManagerModule,\n      providers: [{ provide: 'googleTagManagerConfig', useValue: config }],\n    };\n  }\n}\n","/*\n * Public API Surface of angular-google-tag-manager\n */\n\nexport * from './lib/angular-google-tag-manager.service';\nexport * from './lib/angular-google-tag-manager.module';\nexport * from './lib/google-tag-manager-config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}