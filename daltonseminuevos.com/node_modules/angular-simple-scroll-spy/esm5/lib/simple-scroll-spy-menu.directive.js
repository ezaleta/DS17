/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';
var ScrollSpyMenuDirective = /** @class */ (function () {
    function ScrollSpyMenuDirective(_element, _renderer) {
        this._element = _element;
        this._renderer = _renderer;
        this.ssmActiveClassName = "active";
        this.ssmScrollBehavior = "smooth";
        this.ssmScrollBlock = "start";
        this.ssmScrollInline = "nearest";
    }
    Object.defineProperty(ScrollSpyMenuDirective.prototype, "ssmCurrentContent", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this.contentId === value) {
                this._renderer.addClass(this._element.nativeElement, this.ssmActiveClassName);
            }
            else {
                this._renderer.removeClass(this._element.nativeElement, this.ssmActiveClassName);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    ScrollSpyMenuDirective.prototype.onClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        document.querySelector("#" + this.contentId).scrollIntoView({
            behavior: this.ssmScrollBehavior,
            block: this.ssmScrollBlock,
            inline: this.ssmScrollInline
        });
    };
    ScrollSpyMenuDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[scrollSpyMenu]'
                },] },
    ];
    /** @nocollapse */
    ScrollSpyMenuDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    ScrollSpyMenuDirective.propDecorators = {
        contentId: [{ type: Input, args: ['scrollSpyMenu',] }],
        ssmActiveClassName: [{ type: Input }],
        ssmCurrentContent: [{ type: Input }],
        ssmScrollBehavior: [{ type: Input }],
        ssmScrollBlock: [{ type: Input }],
        ssmScrollInline: [{ type: Input }],
        onClick: [{ type: HostListener, args: ['click', ['$event'],] }]
    };
    return ScrollSpyMenuDirective;
}());
export { ScrollSpyMenuDirective };
if (false) {
    /** @type {?} */
    ScrollSpyMenuDirective.prototype.contentId;
    /** @type {?} */
    ScrollSpyMenuDirective.prototype.ssmActiveClassName;
    /** @type {?} */
    ScrollSpyMenuDirective.prototype.ssmScrollBehavior;
    /** @type {?} */
    ScrollSpyMenuDirective.prototype.ssmScrollBlock;
    /** @type {?} */
    ScrollSpyMenuDirective.prototype.ssmScrollInline;
    /** @type {?} */
    ScrollSpyMenuDirective.prototype._element;
    /** @type {?} */
    ScrollSpyMenuDirective.prototype._renderer;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2ltcGxlLXNjcm9sbC1zcHktbWVudS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLXNpbXBsZS1zY3JvbGwtc3B5LyIsInNvdXJjZXMiOlsibGliL3NpbXBsZS1zY3JvbGwtc3B5LW1lbnUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULFVBQVUsRUFDVixZQUFZLEVBQ1osS0FBSyxFQUNMLFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQzs7SUFxQnJCLGdDQUFvQixRQUFvQixFQUFVLFNBQW9CO1FBQWxELGFBQVEsR0FBUixRQUFRLENBQVk7UUFBVSxjQUFTLEdBQVQsU0FBUyxDQUFXO2tDQWJqQyxRQUFRO2lDQVNPLFFBQVE7OEJBQ0osT0FBTzsrQkFDTixTQUFTO0tBRVE7SUFaMUUsc0JBQWEscURBQWlCOzs7OztRQUE5QixVQUErQixLQUFhO1lBQzFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQztnQkFDN0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7YUFDL0U7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDTixJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQzthQUNsRjtTQUNGOzs7T0FBQTs7Ozs7SUFTRCx3Q0FBTzs7OztJQURQLFVBQ1EsS0FBVTtRQUNoQixRQUFRLENBQUMsYUFBYSxDQUFDLE1BQUksSUFBSSxDQUFDLFNBQVcsQ0FBQyxDQUFDLGNBQWMsQ0FBQztZQUMxRCxRQUFRLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtZQUNoQyxLQUFLLEVBQUUsSUFBSSxDQUFDLGNBQWM7WUFDMUIsTUFBTSxFQUFFLElBQUksQ0FBQyxlQUFlO1NBQzdCLENBQUMsQ0FBQztLQUNKOztnQkE1QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxpQkFBaUI7aUJBQzVCOzs7O2dCQVJDLFVBQVU7Z0JBR1YsU0FBUzs7OzRCQU9SLEtBQUssU0FBQyxlQUFlO3FDQUVyQixLQUFLO29DQUNMLEtBQUs7b0NBUUwsS0FBSztpQ0FDTCxLQUFLO2tDQUNMLEtBQUs7MEJBSUwsWUFBWSxTQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQzs7aUNBN0JuQzs7U0FXYSxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEaXJlY3RpdmUsXG4gIEVsZW1lbnRSZWYsXG4gIEhvc3RMaXN0ZW5lcixcbiAgSW5wdXQsXG4gIFJlbmRlcmVyMlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3Njcm9sbFNweU1lbnVdJ1xufSlcbmV4cG9ydCBjbGFzcyBTY3JvbGxTcHlNZW51RGlyZWN0aXZlIHtcbiAgQElucHV0KCdzY3JvbGxTcHlNZW51JykgcHVibGljIGNvbnRlbnRJZDogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIHB1YmxpYyBzc21BY3RpdmVDbGFzc05hbWUgPSBcImFjdGl2ZVwiO1xuICBASW5wdXQoKSBzZXQgc3NtQ3VycmVudENvbnRlbnQodmFsdWU6IHN0cmluZykge1xuICAgIGlmICh0aGlzLmNvbnRlbnRJZCA9PT0gdmFsdWUpIHtcbiAgICAgIHRoaXMuX3JlbmRlcmVyLmFkZENsYXNzKHRoaXMuX2VsZW1lbnQubmF0aXZlRWxlbWVudCwgdGhpcy5zc21BY3RpdmVDbGFzc05hbWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9yZW5kZXJlci5yZW1vdmVDbGFzcyh0aGlzLl9lbGVtZW50Lm5hdGl2ZUVsZW1lbnQsIHRoaXMuc3NtQWN0aXZlQ2xhc3NOYW1lKTtcbiAgICB9XG4gIH1cblxuICBASW5wdXQoKSBwdWJsaWMgc3NtU2Nyb2xsQmVoYXZpb3I6IFNjcm9sbEJlaGF2aW9yID0gXCJzbW9vdGhcIjtcbiAgQElucHV0KCkgcHVibGljIHNzbVNjcm9sbEJsb2NrOiBTY3JvbGxMb2dpY2FsUG9zaXRpb24gPSBcInN0YXJ0XCI7XG4gIEBJbnB1dCgpIHB1YmxpYyBzc21TY3JvbGxJbmxpbmU6IFNjcm9sbExvZ2ljYWxQb3NpdGlvbiA9IFwibmVhcmVzdFwiO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2VsZW1lbnQ6IEVsZW1lbnRSZWYsIHByaXZhdGUgX3JlbmRlcmVyOiBSZW5kZXJlcjIpIHt9XG5cbiAgQEhvc3RMaXN0ZW5lcignY2xpY2snLCBbJyRldmVudCddKVxuICBvbkNsaWNrKGV2ZW50OiBhbnkpIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjJHt0aGlzLmNvbnRlbnRJZH1gKS5zY3JvbGxJbnRvVmlldyh7XG4gICAgICBiZWhhdmlvcjogdGhpcy5zc21TY3JvbGxCZWhhdmlvcixcbiAgICAgIGJsb2NrOiB0aGlzLnNzbVNjcm9sbEJsb2NrLFxuICAgICAgaW5saW5lOiB0aGlzLnNzbVNjcm9sbElubGluZVxuICAgIH0pO1xuICB9XG59XG4iXX0=