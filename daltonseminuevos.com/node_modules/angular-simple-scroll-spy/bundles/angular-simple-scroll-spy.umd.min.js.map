{"version":3,"sources":["ng://angular-simple-scroll-spy/lib/simple-scroll-spy-content.directive.ts","ng://angular-simple-scroll-spy/lib/simple-scroll-spy-menu.directive.ts","ng://angular-simple-scroll-spy/lib/simple-scroll-spy.module.ts"],"names":["ScrollSpyContentDirective","_element","this","EventEmitter","prototype","onScroll","event","_this","nowContent","Array","from","nativeElement","children","filter","child","target","tagName","reverse","find","sscDirection","offsetTop","scrollTop","offsetLeft","scrollLeft","id","_currentContent","sscCurrentContentChange","emit","Directive","args","selector","ElementRef","Input","Output","HostListener","ScrollSpyMenuDirective","_renderer","Object","defineProperty","value","contentId","addClass","ssmActiveClassName","removeClass","onClick","document","querySelector","scrollIntoView","behavior","ssmScrollBehavior","block","ssmScrollBlock","inline","ssmScrollInline","Renderer2","SimpleScrollSpyModule","NgModule","imports","declarations","exports"],"mappings":"gSAAA,IAAAA,EAAA,WAoBE,SAAAA,EAAoBC,GAAAC,KAAAD,SAAAA,+BAHuB,IAAIE,EAAAA,+BACE,aAKjDH,EAAAI,UAAAC,SADA,SACSC,GADT,IAAAC,EAAAL,KAEMM,EAAkBC,MAAMC,KAAUR,KAAKD,SAASU,cAAcC,UAC/DC,OAAO,SAAAC,GAAS,OAAAP,EAAKQ,SAAWD,EAAME,UACtCC,UACAC,KAAK,SAAAJ,GAAS,MAAsB,QAAtBP,EAAKY,aACjBL,EAAMM,UAAYd,EAAMS,OAAOK,WAAcd,EAAMS,OAAOM,UAC1DP,EAAMQ,WAAahB,EAAMS,OAAOO,YAAehB,EAAMS,OAAOQ,aAE5Df,GAEDA,EAAWgB,KAAOtB,KAAKuB,kBACzBvB,KAAKuB,gBAAkBjB,EAAWgB,GAClCtB,KAAKwB,wBAAwBC,KAAKzB,KAAKuB,uCA1B5CG,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,kEARVC,EAAAA,8CAWCC,EAAAA,MAAKH,KAAA,CAAC,+CAGNG,EAAAA,uCACAC,EAAAA,6BACAD,EAAAA,wBAIAE,EAAAA,aAAYL,KAAA,CAAC,SAAU,CAAC,gBAtB3B,GCAAM,EAAA,WA2BE,SAAAA,EAAoBlC,EAA8BmC,GAA9BlC,KAAAD,SAAAA,EAA8BC,KAAAkC,UAAAA,0BAbb,gCASe,6BACI,6BACC,iBAVzDC,OAAAC,eAAaH,EAAA/B,UAAA,oBAAiB,KAA9B,SAA+BmC,GACzBrC,KAAKsC,YAAcD,EACrBrC,KAAKkC,UAAUK,SAASvC,KAAKD,SAASU,cAAeT,KAAKwC,oBAE1DxC,KAAKkC,UAAUO,YAAYzC,KAAKD,SAASU,cAAeT,KAAKwC,qDAWjEP,EAAA/B,UAAAwC,QADA,SACQtC,GACNuC,SAASC,cAAc,IAAI5C,KAAKsC,WAAaO,eAAe,CAC1DC,SAAU9C,KAAK+C,kBACfC,MAAOhD,KAAKiD,eACZC,OAAQlD,KAAKmD,uCA1BlBzB,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,+DAPVC,EAAAA,kBAGAuB,EAAAA,gDAOCtB,EAAAA,MAAKH,KAAA,CAAC,6CAENG,EAAAA,iCACAA,EAAAA,iCAQAA,EAAAA,8BACAA,EAAAA,+BACAA,EAAAA,uBAIAE,EAAAA,aAAYL,KAAA,CAAC,QAAS,CAAC,gBA7B1B,GCAA0B,EAAA,oDAICC,EAAAA,SAAQ3B,KAAA,CAAC,CACR4B,QAAS,GAETC,aAAc,CACZ1D,EACAmC,GAEFwB,QAAS,CACP3D,EACAmC,SAbJ","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output\n} from '@angular/core';\n\n@Directive({\n  selector: '[scrollSpyContent]'\n})\nexport class ScrollSpyContentDirective {\n  @Input('scrollSpyContent') public target;\n\n  private _currentContent: string;\n  @Input() public sscCurrentContent: string;\n  @Output() public sscCurrentContentChange = new EventEmitter<string>();\n  @Input() public sscDirection: \"row\" | \"colmun\" = \"row\";\n\n  constructor(private _element: ElementRef) {}\n\n  @HostListener('scroll', ['$event'])\n  onScroll(event: any) {\n    let nowContent: any = Array.from<any>(this._element.nativeElement.children)\n      .filter(child => this.target === child.tagName)\n      .reverse()\n      .find(child => this.sscDirection === \"row\" ?\n        (child.offsetTop - event.target.offsetTop) <= event.target.scrollTop :\n        (child.offsetLeft - event.target.offsetLeft) <= event.target.scrollLeft\n      );\n    if (!nowContent) return;\n\n    if (nowContent.id !== this._currentContent) {\n      this._currentContent = nowContent.id;\n      this.sscCurrentContentChange.emit(this._currentContent);\n    }\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  Renderer2\n} from '@angular/core';\n\n@Directive({\n  selector: '[scrollSpyMenu]'\n})\nexport class ScrollSpyMenuDirective {\n  @Input('scrollSpyMenu') public contentId: string;\n\n  @Input() public ssmActiveClassName = \"active\";\n  @Input() set ssmCurrentContent(value: string) {\n    if (this.contentId === value) {\n      this._renderer.addClass(this._element.nativeElement, this.ssmActiveClassName);\n    } else {\n      this._renderer.removeClass(this._element.nativeElement, this.ssmActiveClassName);\n    }\n  }\n\n  @Input() public ssmScrollBehavior: ScrollBehavior = \"smooth\";\n  @Input() public ssmScrollBlock: ScrollLogicalPosition = \"start\";\n  @Input() public ssmScrollInline: ScrollLogicalPosition = \"nearest\";\n\n  constructor(private _element: ElementRef, private _renderer: Renderer2) {}\n\n  @HostListener('click', ['$event'])\n  onClick(event: any) {\n    document.querySelector(`#${this.contentId}`).scrollIntoView({\n      behavior: this.ssmScrollBehavior,\n      block: this.ssmScrollBlock,\n      inline: this.ssmScrollInline\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {ScrollSpyContentDirective} from \"./simple-scroll-spy-content.directive\";\nimport {ScrollSpyMenuDirective} from \"./simple-scroll-spy-menu.directive\";\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    ScrollSpyContentDirective,\n    ScrollSpyMenuDirective\n  ],\n  exports: [\n    ScrollSpyContentDirective,\n    ScrollSpyMenuDirective\n  ]\n})\nexport class SimpleScrollSpyModule { }\n"]}