import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnInit, QueryList, SimpleChanges } from '@angular/core';
import Swiper from 'swiper/core';
import { Observable, Subject } from 'rxjs';
import { SwiperSlideDirective } from './swiper-slide.directive';
import { SwiperOptions, SwiperEvents, NavigationOptions, PaginationOptions, ScrollbarOptions, VirtualOptions } from 'swiper/types';
import * as Éµngcc0 from '@angular/core';
export declare class SwiperComponent implements OnInit {
    private _ngZone;
    private elementRef;
    private _changeDetectorRef;
    private _platformId;
    direction: SwiperOptions['direction'];
    touchEventsTarget: SwiperOptions['touchEventsTarget'];
    initialSlide: SwiperOptions['initialSlide'];
    speed: SwiperOptions['speed'];
    cssMode: SwiperOptions['cssMode'];
    updateOnWindowResize: SwiperOptions['updateOnWindowResize'];
    resizeObserver: SwiperOptions['resizeObserver'];
    nested: SwiperOptions['nested'];
    focusableElements: SwiperOptions['focusableElements'];
    width: SwiperOptions['width'];
    height: SwiperOptions['height'];
    preventInteractionOnTransition: SwiperOptions['preventInteractionOnTransition'];
    userAgent: SwiperOptions['userAgent'];
    url: SwiperOptions['url'];
    edgeSwipeDetection: boolean | string;
    edgeSwipeThreshold: number;
    freeMode: SwiperOptions['freeMode'];
    freeModeMomentum: SwiperOptions['freeModeMomentum'];
    freeModeMomentumRatio: SwiperOptions['freeModeMomentumRatio'];
    freeModeMomentumBounce: SwiperOptions['freeModeMomentumBounce'];
    freeModeMomentumBounceRatio: SwiperOptions['freeModeMomentumBounceRatio'];
    freeModeMomentumVelocityRatio: SwiperOptions['freeModeMomentumVelocityRatio'];
    freeModeSticky: SwiperOptions['freeModeSticky'];
    freeModeMinimumVelocity: SwiperOptions['freeModeMinimumVelocity'];
    autoHeight: SwiperOptions['autoHeight'];
    setWrapperSize: SwiperOptions['setWrapperSize'];
    virtualTranslate: SwiperOptions['virtualTranslate'];
    effect: SwiperOptions['effect'];
    breakpoints: SwiperOptions['breakpoints'];
    spaceBetween: SwiperOptions['spaceBetween'];
    slidesPerView: SwiperOptions['slidesPerView'];
    slidesPerColumn: SwiperOptions['slidesPerColumn'];
    slidesPerColumnFill: SwiperOptions['slidesPerColumnFill'];
    slidesPerGroup: SwiperOptions['slidesPerGroup'];
    slidesPerGroupSkip: SwiperOptions['slidesPerGroupSkip'];
    centeredSlides: SwiperOptions['centeredSlides'];
    centeredSlidesBounds: SwiperOptions['centeredSlidesBounds'];
    slidesOffsetBefore: SwiperOptions['slidesOffsetBefore'];
    slidesOffsetAfter: SwiperOptions['slidesOffsetAfter'];
    normalizeSlideIndex: SwiperOptions['normalizeSlideIndex'];
    centerInsufficientSlides: SwiperOptions['centerInsufficientSlides'];
    watchOverflow: SwiperOptions['watchOverflow'];
    roundLengths: SwiperOptions['roundLengths'];
    touchRatio: SwiperOptions['touchRatio'];
    touchAngle: SwiperOptions['touchAngle'];
    simulateTouch: SwiperOptions['simulateTouch'];
    shortSwipes: SwiperOptions['shortSwipes'];
    longSwipes: SwiperOptions['longSwipes'];
    longSwipesRatio: SwiperOptions['longSwipesRatio'];
    longSwipesMs: SwiperOptions['longSwipesMs'];
    followFinger: SwiperOptions['followFinger'];
    allowTouchMove: SwiperOptions['allowTouchMove'];
    threshold: SwiperOptions['threshold'];
    touchMoveStopPropagation: SwiperOptions['touchMoveStopPropagation'];
    touchStartPreventDefault: SwiperOptions['touchStartPreventDefault'];
    touchStartForcePreventDefault: SwiperOptions['touchStartForcePreventDefault'];
    touchReleaseOnEdges: SwiperOptions['touchReleaseOnEdges'];
    uniqueNavElements: SwiperOptions['uniqueNavElements'];
    resistance: SwiperOptions['resistance'];
    resistanceRatio: SwiperOptions['resistanceRatio'];
    watchSlidesProgress: SwiperOptions['watchSlidesProgress'];
    watchSlidesVisibility: SwiperOptions['watchSlidesVisibility'];
    grabCursor: SwiperOptions['grabCursor'];
    preventClicks: SwiperOptions['preventClicks'];
    preventClicksPropagation: SwiperOptions['preventClicksPropagation'];
    slideToClickedSlide: SwiperOptions['slideToClickedSlide'];
    preloadImages: SwiperOptions['preloadImages'];
    updateOnImagesReady: SwiperOptions['updateOnImagesReady'];
    loop: SwiperOptions['loop'];
    loopAdditionalSlides: SwiperOptions['loopAdditionalSlides'];
    loopedSlides: SwiperOptions['loopedSlides'];
    loopFillGroupWithBlank: SwiperOptions['loopFillGroupWithBlank'];
    loopPreventsSlide: SwiperOptions['loopPreventsSlide'];
    allowSlidePrev: SwiperOptions['allowSlidePrev'];
    allowSlideNext: SwiperOptions['allowSlideNext'];
    swipeHandler: SwiperOptions['swipeHandler'];
    noSwiping: SwiperOptions['noSwiping'];
    noSwipingClass: SwiperOptions['noSwipingClass'];
    noSwipingSelector: SwiperOptions['noSwipingSelector'];
    passiveListeners: SwiperOptions['passiveListeners'];
    containerModifierClass: SwiperOptions['containerModifierClass'];
    slideClass: SwiperOptions['slideClass'];
    slideBlankClass: SwiperOptions['slideBlankClass'];
    slideActiveClass: SwiperOptions['slideActiveClass'];
    slideDuplicateActiveClass: SwiperOptions['slideDuplicateActiveClass'];
    slideVisibleClass: SwiperOptions['slideVisibleClass'];
    slideDuplicateClass: SwiperOptions['slideDuplicateClass'];
    slideNextClass: SwiperOptions['slideNextClass'];
    slideDuplicateNextClass: SwiperOptions['slideDuplicateNextClass'];
    slidePrevClass: SwiperOptions['slidePrevClass'];
    slideDuplicatePrevClass: SwiperOptions['slideDuplicatePrevClass'];
    wrapperClass: SwiperOptions['wrapperClass'];
    runCallbacksOnInit: SwiperOptions['runCallbacksOnInit'];
    observeParents: SwiperOptions['observeParents'];
    observeSlideChildren: SwiperOptions['observeSlideChildren'];
    a11y: SwiperOptions['a11y'];
    autoplay: SwiperOptions['autoplay'];
    controller: SwiperOptions['controller'];
    coverflowEffect: SwiperOptions['coverflowEffect'];
    cubeEffect: SwiperOptions['cubeEffect'];
    fadeEffect: SwiperOptions['fadeEffect'];
    flipEffect: SwiperOptions['flipEffect'];
    hashNavigation: SwiperOptions['hashNavigation'];
    history: SwiperOptions['history'];
    keyboard: SwiperOptions['keyboard'];
    lazy: SwiperOptions['lazy'];
    mousewheel: SwiperOptions['mousewheel'];
    parallax: SwiperOptions['parallax'];
    thumbs: SwiperOptions['thumbs'];
    zoom: SwiperOptions['zoom'];
    class: string;
    id: string;
    set navigation(val: boolean | NavigationOptions);
    get navigation(): boolean | NavigationOptions;
    private _navigation;
    showNavigation: boolean;
    set pagination(val: boolean | PaginationOptions);
    get pagination(): boolean | PaginationOptions;
    private _pagination;
    showPagination: boolean;
    set scrollbar(val: boolean | ScrollbarOptions);
    get scrollbar(): boolean | ScrollbarOptions;
    private _scrollbar;
    showScrollbar: boolean;
    set virtual(val: boolean | VirtualOptions);
    get virtual(): boolean | VirtualOptions;
    private _virtual;
    set index(index: number);
    set config(val: SwiperOptions);
    s__beforeBreakpoint: EventEmitter<SwiperEvents['_beforeBreakpoint']>;
    s__containerClasses: EventEmitter<SwiperEvents['_containerClasses']>;
    s__slideClass: EventEmitter<SwiperEvents['_slideClass']>;
    s__swiper: EventEmitter<SwiperEvents['_swiper']>;
    s_activeIndexChange: EventEmitter<SwiperEvents['activeIndexChange']>;
    s_afterInit: EventEmitter<SwiperEvents['afterInit']>;
    s_autoplay: EventEmitter<SwiperEvents['autoplay']>;
    s_autoplayStart: EventEmitter<SwiperEvents['autoplayStart']>;
    s_autoplayStop: EventEmitter<SwiperEvents['autoplayStop']>;
    s_beforeDestroy: EventEmitter<SwiperEvents['beforeDestroy']>;
    s_beforeInit: EventEmitter<SwiperEvents['beforeInit']>;
    s_beforeLoopFix: EventEmitter<SwiperEvents['beforeLoopFix']>;
    s_beforeResize: EventEmitter<SwiperEvents['beforeResize']>;
    s_beforeSlideChangeStart: EventEmitter<SwiperEvents['beforeSlideChangeStart']>;
    s_beforeTransitionStart: EventEmitter<SwiperEvents['beforeTransitionStart']>;
    s_breakpoint: EventEmitter<SwiperEvents['breakpoint']>;
    s_changeDirection: EventEmitter<SwiperEvents['changeDirection']>;
    s_click: EventEmitter<SwiperEvents['click']>;
    s_doubleTap: EventEmitter<SwiperEvents['doubleTap']>;
    s_doubleClick: EventEmitter<SwiperEvents['doubleClick']>;
    s_destroy: EventEmitter<SwiperEvents['destroy']>;
    s_fromEdge: EventEmitter<SwiperEvents['fromEdge']>;
    s_hashChange: EventEmitter<SwiperEvents['hashChange']>;
    s_hashSet: EventEmitter<SwiperEvents['hashSet']>;
    s_imagesReady: EventEmitter<SwiperEvents['imagesReady']>;
    s_init: EventEmitter<SwiperEvents['init']>;
    s_keyPress: EventEmitter<SwiperEvents['keyPress']>;
    s_lazyImageLoad: EventEmitter<SwiperEvents['lazyImageLoad']>;
    s_lazyImageReady: EventEmitter<SwiperEvents['lazyImageReady']>;
    s_loopFix: EventEmitter<SwiperEvents['loopFix']>;
    s_momentumBounce: EventEmitter<SwiperEvents['momentumBounce']>;
    s_navigationHide: EventEmitter<SwiperEvents['navigationHide']>;
    s_navigationShow: EventEmitter<SwiperEvents['navigationShow']>;
    s_observerUpdate: EventEmitter<SwiperEvents['observerUpdate']>;
    s_orientationchange: EventEmitter<SwiperEvents['orientationchange']>;
    s_paginationHide: EventEmitter<SwiperEvents['paginationHide']>;
    s_paginationRender: EventEmitter<SwiperEvents['paginationRender']>;
    s_paginationShow: EventEmitter<SwiperEvents['paginationShow']>;
    s_paginationUpdate: EventEmitter<SwiperEvents['paginationUpdate']>;
    s_progress: EventEmitter<SwiperEvents['progress']>;
    s_reachBeginning: EventEmitter<SwiperEvents['reachBeginning']>;
    s_reachEnd: EventEmitter<SwiperEvents['reachEnd']>;
    s_realIndexChange: EventEmitter<SwiperEvents['realIndexChange']>;
    s_resize: EventEmitter<SwiperEvents['resize']>;
    s_scroll: EventEmitter<SwiperEvents['scroll']>;
    s_scrollbarDragEnd: EventEmitter<SwiperEvents['scrollbarDragEnd']>;
    s_scrollbarDragMove: EventEmitter<SwiperEvents['scrollbarDragMove']>;
    s_scrollbarDragStart: EventEmitter<SwiperEvents['scrollbarDragStart']>;
    s_setTransition: EventEmitter<SwiperEvents['setTransition']>;
    s_setTranslate: EventEmitter<SwiperEvents['setTranslate']>;
    s_slideChange: EventEmitter<SwiperEvents['slideChange']>;
    s_slideChangeTransitionEnd: EventEmitter<SwiperEvents['slideChangeTransitionEnd']>;
    s_slideChangeTransitionStart: EventEmitter<SwiperEvents['slideChangeTransitionStart']>;
    s_slideNextTransitionEnd: EventEmitter<SwiperEvents['slideNextTransitionEnd']>;
    s_slideNextTransitionStart: EventEmitter<SwiperEvents['slideNextTransitionStart']>;
    s_slidePrevTransitionEnd: EventEmitter<SwiperEvents['slidePrevTransitionEnd']>;
    s_slidePrevTransitionStart: EventEmitter<SwiperEvents['slidePrevTransitionStart']>;
    s_slideResetTransitionStart: EventEmitter<SwiperEvents['slideResetTransitionStart']>;
    s_slideResetTransitionEnd: EventEmitter<SwiperEvents['slideResetTransitionEnd']>;
    s_sliderMove: EventEmitter<SwiperEvents['sliderMove']>;
    s_sliderFirstMove: EventEmitter<SwiperEvents['sliderFirstMove']>;
    s_slidesLengthChange: EventEmitter<SwiperEvents['slidesLengthChange']>;
    s_slidesGridLengthChange: EventEmitter<SwiperEvents['slidesGridLengthChange']>;
    s_snapGridLengthChange: EventEmitter<SwiperEvents['snapGridLengthChange']>;
    s_snapIndexChange: EventEmitter<SwiperEvents['snapIndexChange']>;
    s_tap: EventEmitter<SwiperEvents['tap']>;
    s_toEdge: EventEmitter<SwiperEvents['toEdge']>;
    s_touchEnd: EventEmitter<SwiperEvents['touchEnd']>;
    s_touchMove: EventEmitter<SwiperEvents['touchMove']>;
    s_touchMoveOpposite: EventEmitter<SwiperEvents['touchMoveOpposite']>;
    s_touchStart: EventEmitter<SwiperEvents['touchStart']>;
    s_transitionEnd: EventEmitter<SwiperEvents['transitionEnd']>;
    s_transitionStart: EventEmitter<SwiperEvents['transitionStart']>;
    s_update: EventEmitter<SwiperEvents['update']>;
    s_zoomChange: EventEmitter<SwiperEvents['zoomChange']>;
    s_swiper: EventEmitter<any>;
    indexChange: EventEmitter<number>;
    set prevElRef(el: ElementRef);
    _prevElRef: ElementRef;
    set nextElRef(el: ElementRef);
    _nextElRef: ElementRef;
    set scrollbarElRef(el: ElementRef);
    _scrollbarElRef: ElementRef;
    set paginationElRef(el: ElementRef);
    _paginationElRef: ElementRef;
    slidesEl: QueryList<SwiperSlideDirective>;
    private slides;
    prependSlides: Observable<SwiperSlideDirective[]>;
    appendSlides: Observable<SwiperSlideDirective[]>;
    swiperRef: Swiper;
    readonly _activeSlides: Subject<SwiperSlideDirective[]>;
    get activeSlides(): Observable<SwiperSlideDirective[]>;
    get zoomContainerClass(): string;
    containerClasses: string;
    constructor(_ngZone: NgZone, elementRef: ElementRef, _changeDetectorRef: ChangeDetectorRef, _platformId: any);
    private _setElement;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    private childrenSlidesInit;
    private slidesChanges;
    get isSwiperActive(): boolean;
    initSwiper(): void;
    style: any;
    currentVirtualData: any;
    private updateVirtualSlides;
    ngOnChanges(changedParams: SimpleChanges): void;
    updateInitSwiper(changedParams: any): void;
    updateSwiper(changedParams: SimpleChanges | any): void;
    calcLoopedSlides(): number;
    updateParameter(key: any, value: any): void;
    setIndex(index: number, speed?: number, silent?: boolean): void;
    ngOnDestroy(): void;
    static Éµfac: Éµngcc0.ÉµÉµFactoryDef<SwiperComponent, never>;
    static Éµcmp: Éµngcc0.ÉµÉµComponentDefWithMeta<SwiperComponent, "swiper, [swiper]", never, { "slideClass": "slideClass"; "wrapperClass": "wrapperClass"; "navigation": "navigation"; "pagination": "pagination"; "scrollbar": "scrollbar"; "virtual": "virtual"; "index": "index"; "config": "config"; "loopedSlides": "loopedSlides"; "initialSlide": "initialSlide"; "direction": "direction"; "touchEventsTarget": "touchEventsTarget"; "speed": "speed"; "cssMode": "cssMode"; "updateOnWindowResize": "updateOnWindowResize"; "resizeObserver": "resizeObserver"; "nested": "nested"; "focusableElements": "focusableElements"; "width": "width"; "height": "height"; "preventInteractionOnTransition": "preventInteractionOnTransition"; "userAgent": "userAgent"; "url": "url"; "edgeSwipeDetection": "edgeSwipeDetection"; "edgeSwipeThreshold": "edgeSwipeThreshold"; "freeMode": "freeMode"; "freeModeMomentum": "freeModeMomentum"; "freeModeMomentumRatio": "freeModeMomentumRatio"; "freeModeMomentumBounce": "freeModeMomentumBounce"; "freeModeMomentumBounceRatio": "freeModeMomentumBounceRatio"; "freeModeMomentumVelocityRatio": "freeModeMomentumVelocityRatio"; "freeModeSticky": "freeModeSticky"; "freeModeMinimumVelocity": "freeModeMinimumVelocity"; "autoHeight": "autoHeight"; "setWrapperSize": "setWrapperSize"; "virtualTranslate": "virtualTranslate"; "effect": "effect"; "breakpoints": "breakpoints"; "spaceBetween": "spaceBetween"; "slidesPerView": "slidesPerView"; "slidesPerColumn": "slidesPerColumn"; "slidesPerColumnFill": "slidesPerColumnFill"; "slidesPerGroup": "slidesPerGroup"; "slidesPerGroupSkip": "slidesPerGroupSkip"; "centeredSlides": "centeredSlides"; "centeredSlidesBounds": "centeredSlidesBounds"; "slidesOffsetBefore": "slidesOffsetBefore"; "slidesOffsetAfter": "slidesOffsetAfter"; "normalizeSlideIndex": "normalizeSlideIndex"; "centerInsufficientSlides": "centerInsufficientSlides"; "watchOverflow": "watchOverflow"; "roundLengths": "roundLengths"; "touchRatio": "touchRatio"; "touchAngle": "touchAngle"; "simulateTouch": "simulateTouch"; "shortSwipes": "shortSwipes"; "longSwipes": "longSwipes"; "longSwipesRatio": "longSwipesRatio"; "longSwipesMs": "longSwipesMs"; "followFinger": "followFinger"; "allowTouchMove": "allowTouchMove"; "threshold": "threshold"; "touchMoveStopPropagation": "touchMoveStopPropagation"; "touchStartPreventDefault": "touchStartPreventDefault"; "touchStartForcePreventDefault": "touchStartForcePreventDefault"; "touchReleaseOnEdges": "touchReleaseOnEdges"; "uniqueNavElements": "uniqueNavElements"; "resistance": "resistance"; "resistanceRatio": "resistanceRatio"; "watchSlidesProgress": "watchSlidesProgress"; "watchSlidesVisibility": "watchSlidesVisibility"; "grabCursor": "grabCursor"; "preventClicks": "preventClicks"; "preventClicksPropagation": "preventClicksPropagation"; "slideToClickedSlide": "slideToClickedSlide"; "preloadImages": "preloadImages"; "updateOnImagesReady": "updateOnImagesReady"; "loop": "loop"; "loopAdditionalSlides": "loopAdditionalSlides"; "loopFillGroupWithBlank": "loopFillGroupWithBlank"; "loopPreventsSlide": "loopPreventsSlide"; "allowSlidePrev": "allowSlidePrev"; "allowSlideNext": "allowSlideNext"; "swipeHandler": "swipeHandler"; "noSwiping": "noSwiping"; "noSwipingClass": "noSwipingClass"; "noSwipingSelector": "noSwipingSelector"; "passiveListeners": "passiveListeners"; "containerModifierClass": "containerModifierClass"; "slideBlankClass": "slideBlankClass"; "slideActiveClass": "slideActiveClass"; "slideDuplicateActiveClass": "slideDuplicateActiveClass"; "slideVisibleClass": "slideVisibleClass"; "slideDuplicateClass": "slideDuplicateClass"; "slideNextClass": "slideNextClass"; "slideDuplicateNextClass": "slideDuplicateNextClass"; "slidePrevClass": "slidePrevClass"; "slideDuplicatePrevClass": "slideDuplicatePrevClass"; "runCallbacksOnInit": "runCallbacksOnInit"; "observeParents": "observeParents"; "observeSlideChildren": "observeSlideChildren"; "a11y": "a11y"; "autoplay": "autoplay"; "controller": "controller"; "coverflowEffect": "coverflowEffect"; "cubeEffect": "cubeEffect"; "fadeEffect": "fadeEffect"; "flipEffect": "flipEffect"; "hashNavigation": "hashNavigation"; "history": "history"; "keyboard": "keyboard"; "lazy": "lazy"; "mousewheel": "mousewheel"; "parallax": "parallax"; "thumbs": "thumbs"; "zoom": "zoom"; "class": "class"; "id": "id"; }, { "s__beforeBreakpoint": "_beforeBreakpoint"; "s__containerClasses": "_containerClasses"; "s__slideClass": "_slideClass"; "s__swiper": "_swiper"; "s_activeIndexChange": "activeIndexChange"; "s_afterInit": "afterInit"; "s_autoplay": "autoplay"; "s_autoplayStart": "autoplayStart"; "s_autoplayStop": "autoplayStop"; "s_beforeDestroy": "beforeDestroy"; "s_beforeInit": "beforeInit"; "s_beforeLoopFix": "beforeLoopFix"; "s_beforeResize": "beforeResize"; "s_beforeSlideChangeStart": "beforeSlideChangeStart"; "s_beforeTransitionStart": "beforeTransitionStart"; "s_breakpoint": "breakpoint"; "s_changeDirection": "changeDirection"; "s_click": "click"; "s_doubleTap": "doubleTap"; "s_doubleClick": "doubleClick"; "s_destroy": "destroy"; "s_fromEdge": "fromEdge"; "s_hashChange": "hashChange"; "s_hashSet": "hashSet"; "s_imagesReady": "imagesReady"; "s_init": "init"; "s_keyPress": "keyPress"; "s_lazyImageLoad": "lazyImageLoad"; "s_lazyImageReady": "lazyImageReady"; "s_loopFix": "loopFix"; "s_momentumBounce": "momentumBounce"; "s_navigationHide": "navigationHide"; "s_navigationShow": "navigationShow"; "s_observerUpdate": "observerUpdate"; "s_orientationchange": "orientationchange"; "s_paginationHide": "paginationHide"; "s_paginationRender": "paginationRender"; "s_paginationShow": "paginationShow"; "s_paginationUpdate": "paginationUpdate"; "s_progress": "progress"; "s_reachBeginning": "reachBeginning"; "s_reachEnd": "reachEnd"; "s_realIndexChange": "realIndexChange"; "s_resize": "resize"; "s_scroll": "scroll"; "s_scrollbarDragEnd": "scrollbarDragEnd"; "s_scrollbarDragMove": "scrollbarDragMove"; "s_scrollbarDragStart": "scrollbarDragStart"; "s_setTransition": "setTransition"; "s_setTranslate": "setTranslate"; "s_slideChange": "slideChange"; "s_slideChangeTransitionEnd": "slideChangeTransitionEnd"; "s_slideChangeTransitionStart": "slideChangeTransitionStart"; "s_slideNextTransitionEnd": "slideNextTransitionEnd"; "s_slideNextTransitionStart": "slideNextTransitionStart"; "s_slidePrevTransitionEnd": "slidePrevTransitionEnd"; "s_slidePrevTransitionStart": "slidePrevTransitionStart"; "s_slideResetTransitionStart": "slideResetTransitionStart"; "s_slideResetTransitionEnd": "slideResetTransitionEnd"; "s_sliderMove": "sliderMove"; "s_sliderFirstMove": "sliderFirstMove"; "s_slidesLengthChange": "slidesLengthChange"; "s_slidesGridLengthChange": "slidesGridLengthChange"; "s_snapGridLengthChange": "snapGridLengthChange"; "s_snapIndexChange": "snapIndexChange"; "s_tap": "tap"; "s_toEdge": "toEdge"; "s_touchEnd": "touchEnd"; "s_touchMove": "touchMove"; "s_touchMoveOpposite": "touchMoveOpposite"; "s_touchStart": "touchStart"; "s_transitionEnd": "transitionEnd"; "s_transitionStart": "transitionStart"; "s_update": "update"; "s_zoomChange": "zoomChange"; "s_swiper": "swiper"; "indexChange": "indexChange"; }, ["slidesEl"], ["[slot=container-start]", "[slot=wrapper-start]", "[slot=wrapper-end]", "[slot=container-end]"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dpcGVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzd2lwZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgTmdab25lLCBPbkluaXQsIFF1ZXJ5TGlzdCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IFN3aXBlciBmcm9tICdzd2lwZXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBTd2lwZXJTbGlkZURpcmVjdGl2ZSB9IGZyb20gJy4vc3dpcGVyLXNsaWRlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTd2lwZXJPcHRpb25zLCBTd2lwZXJFdmVudHMsIE5hdmlnYXRpb25PcHRpb25zLCBQYWdpbmF0aW9uT3B0aW9ucywgU2Nyb2xsYmFyT3B0aW9ucywgVmlydHVhbE9wdGlvbnMgfSBmcm9tICdzd2lwZXIvdHlwZXMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU3dpcGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBwcml2YXRlIF9uZ1pvbmU7XG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmO1xuICAgIHByaXZhdGUgX2NoYW5nZURldGVjdG9yUmVmO1xuICAgIHByaXZhdGUgX3BsYXRmb3JtSWQ7XG4gICAgZGlyZWN0aW9uOiBTd2lwZXJPcHRpb25zWydkaXJlY3Rpb24nXTtcbiAgICB0b3VjaEV2ZW50c1RhcmdldDogU3dpcGVyT3B0aW9uc1sndG91Y2hFdmVudHNUYXJnZXQnXTtcbiAgICBpbml0aWFsU2xpZGU6IFN3aXBlck9wdGlvbnNbJ2luaXRpYWxTbGlkZSddO1xuICAgIHNwZWVkOiBTd2lwZXJPcHRpb25zWydzcGVlZCddO1xuICAgIGNzc01vZGU6IFN3aXBlck9wdGlvbnNbJ2Nzc01vZGUnXTtcbiAgICB1cGRhdGVPbldpbmRvd1Jlc2l6ZTogU3dpcGVyT3B0aW9uc1sndXBkYXRlT25XaW5kb3dSZXNpemUnXTtcbiAgICByZXNpemVPYnNlcnZlcjogU3dpcGVyT3B0aW9uc1sncmVzaXplT2JzZXJ2ZXInXTtcbiAgICBuZXN0ZWQ6IFN3aXBlck9wdGlvbnNbJ25lc3RlZCddO1xuICAgIGZvY3VzYWJsZUVsZW1lbnRzOiBTd2lwZXJPcHRpb25zWydmb2N1c2FibGVFbGVtZW50cyddO1xuICAgIHdpZHRoOiBTd2lwZXJPcHRpb25zWyd3aWR0aCddO1xuICAgIGhlaWdodDogU3dpcGVyT3B0aW9uc1snaGVpZ2h0J107XG4gICAgcHJldmVudEludGVyYWN0aW9uT25UcmFuc2l0aW9uOiBTd2lwZXJPcHRpb25zWydwcmV2ZW50SW50ZXJhY3Rpb25PblRyYW5zaXRpb24nXTtcbiAgICB1c2VyQWdlbnQ6IFN3aXBlck9wdGlvbnNbJ3VzZXJBZ2VudCddO1xuICAgIHVybDogU3dpcGVyT3B0aW9uc1sndXJsJ107XG4gICAgZWRnZVN3aXBlRGV0ZWN0aW9uOiBib29sZWFuIHwgc3RyaW5nO1xuICAgIGVkZ2VTd2lwZVRocmVzaG9sZDogbnVtYmVyO1xuICAgIGZyZWVNb2RlOiBTd2lwZXJPcHRpb25zWydmcmVlTW9kZSddO1xuICAgIGZyZWVNb2RlTW9tZW50dW06IFN3aXBlck9wdGlvbnNbJ2ZyZWVNb2RlTW9tZW50dW0nXTtcbiAgICBmcmVlTW9kZU1vbWVudHVtUmF0aW86IFN3aXBlck9wdGlvbnNbJ2ZyZWVNb2RlTW9tZW50dW1SYXRpbyddO1xuICAgIGZyZWVNb2RlTW9tZW50dW1Cb3VuY2U6IFN3aXBlck9wdGlvbnNbJ2ZyZWVNb2RlTW9tZW50dW1Cb3VuY2UnXTtcbiAgICBmcmVlTW9kZU1vbWVudHVtQm91bmNlUmF0aW86IFN3aXBlck9wdGlvbnNbJ2ZyZWVNb2RlTW9tZW50dW1Cb3VuY2VSYXRpbyddO1xuICAgIGZyZWVNb2RlTW9tZW50dW1WZWxvY2l0eVJhdGlvOiBTd2lwZXJPcHRpb25zWydmcmVlTW9kZU1vbWVudHVtVmVsb2NpdHlSYXRpbyddO1xuICAgIGZyZWVNb2RlU3RpY2t5OiBTd2lwZXJPcHRpb25zWydmcmVlTW9kZVN0aWNreSddO1xuICAgIGZyZWVNb2RlTWluaW11bVZlbG9jaXR5OiBTd2lwZXJPcHRpb25zWydmcmVlTW9kZU1pbmltdW1WZWxvY2l0eSddO1xuICAgIGF1dG9IZWlnaHQ6IFN3aXBlck9wdGlvbnNbJ2F1dG9IZWlnaHQnXTtcbiAgICBzZXRXcmFwcGVyU2l6ZTogU3dpcGVyT3B0aW9uc1snc2V0V3JhcHBlclNpemUnXTtcbiAgICB2aXJ0dWFsVHJhbnNsYXRlOiBTd2lwZXJPcHRpb25zWyd2aXJ0dWFsVHJhbnNsYXRlJ107XG4gICAgZWZmZWN0OiBTd2lwZXJPcHRpb25zWydlZmZlY3QnXTtcbiAgICBicmVha3BvaW50czogU3dpcGVyT3B0aW9uc1snYnJlYWtwb2ludHMnXTtcbiAgICBzcGFjZUJldHdlZW46IFN3aXBlck9wdGlvbnNbJ3NwYWNlQmV0d2VlbiddO1xuICAgIHNsaWRlc1BlclZpZXc6IFN3aXBlck9wdGlvbnNbJ3NsaWRlc1BlclZpZXcnXTtcbiAgICBzbGlkZXNQZXJDb2x1bW46IFN3aXBlck9wdGlvbnNbJ3NsaWRlc1BlckNvbHVtbiddO1xuICAgIHNsaWRlc1BlckNvbHVtbkZpbGw6IFN3aXBlck9wdGlvbnNbJ3NsaWRlc1BlckNvbHVtbkZpbGwnXTtcbiAgICBzbGlkZXNQZXJHcm91cDogU3dpcGVyT3B0aW9uc1snc2xpZGVzUGVyR3JvdXAnXTtcbiAgICBzbGlkZXNQZXJHcm91cFNraXA6IFN3aXBlck9wdGlvbnNbJ3NsaWRlc1Blckdyb3VwU2tpcCddO1xuICAgIGNlbnRlcmVkU2xpZGVzOiBTd2lwZXJPcHRpb25zWydjZW50ZXJlZFNsaWRlcyddO1xuICAgIGNlbnRlcmVkU2xpZGVzQm91bmRzOiBTd2lwZXJPcHRpb25zWydjZW50ZXJlZFNsaWRlc0JvdW5kcyddO1xuICAgIHNsaWRlc09mZnNldEJlZm9yZTogU3dpcGVyT3B0aW9uc1snc2xpZGVzT2Zmc2V0QmVmb3JlJ107XG4gICAgc2xpZGVzT2Zmc2V0QWZ0ZXI6IFN3aXBlck9wdGlvbnNbJ3NsaWRlc09mZnNldEFmdGVyJ107XG4gICAgbm9ybWFsaXplU2xpZGVJbmRleDogU3dpcGVyT3B0aW9uc1snbm9ybWFsaXplU2xpZGVJbmRleCddO1xuICAgIGNlbnRlckluc3VmZmljaWVudFNsaWRlczogU3dpcGVyT3B0aW9uc1snY2VudGVySW5zdWZmaWNpZW50U2xpZGVzJ107XG4gICAgd2F0Y2hPdmVyZmxvdzogU3dpcGVyT3B0aW9uc1snd2F0Y2hPdmVyZmxvdyddO1xuICAgIHJvdW5kTGVuZ3RoczogU3dpcGVyT3B0aW9uc1sncm91bmRMZW5ndGhzJ107XG4gICAgdG91Y2hSYXRpbzogU3dpcGVyT3B0aW9uc1sndG91Y2hSYXRpbyddO1xuICAgIHRvdWNoQW5nbGU6IFN3aXBlck9wdGlvbnNbJ3RvdWNoQW5nbGUnXTtcbiAgICBzaW11bGF0ZVRvdWNoOiBTd2lwZXJPcHRpb25zWydzaW11bGF0ZVRvdWNoJ107XG4gICAgc2hvcnRTd2lwZXM6IFN3aXBlck9wdGlvbnNbJ3Nob3J0U3dpcGVzJ107XG4gICAgbG9uZ1N3aXBlczogU3dpcGVyT3B0aW9uc1snbG9uZ1N3aXBlcyddO1xuICAgIGxvbmdTd2lwZXNSYXRpbzogU3dpcGVyT3B0aW9uc1snbG9uZ1N3aXBlc1JhdGlvJ107XG4gICAgbG9uZ1N3aXBlc01zOiBTd2lwZXJPcHRpb25zWydsb25nU3dpcGVzTXMnXTtcbiAgICBmb2xsb3dGaW5nZXI6IFN3aXBlck9wdGlvbnNbJ2ZvbGxvd0ZpbmdlciddO1xuICAgIGFsbG93VG91Y2hNb3ZlOiBTd2lwZXJPcHRpb25zWydhbGxvd1RvdWNoTW92ZSddO1xuICAgIHRocmVzaG9sZDogU3dpcGVyT3B0aW9uc1sndGhyZXNob2xkJ107XG4gICAgdG91Y2hNb3ZlU3RvcFByb3BhZ2F0aW9uOiBTd2lwZXJPcHRpb25zWyd0b3VjaE1vdmVTdG9wUHJvcGFnYXRpb24nXTtcbiAgICB0b3VjaFN0YXJ0UHJldmVudERlZmF1bHQ6IFN3aXBlck9wdGlvbnNbJ3RvdWNoU3RhcnRQcmV2ZW50RGVmYXVsdCddO1xuICAgIHRvdWNoU3RhcnRGb3JjZVByZXZlbnREZWZhdWx0OiBTd2lwZXJPcHRpb25zWyd0b3VjaFN0YXJ0Rm9yY2VQcmV2ZW50RGVmYXVsdCddO1xuICAgIHRvdWNoUmVsZWFzZU9uRWRnZXM6IFN3aXBlck9wdGlvbnNbJ3RvdWNoUmVsZWFzZU9uRWRnZXMnXTtcbiAgICB1bmlxdWVOYXZFbGVtZW50czogU3dpcGVyT3B0aW9uc1sndW5pcXVlTmF2RWxlbWVudHMnXTtcbiAgICByZXNpc3RhbmNlOiBTd2lwZXJPcHRpb25zWydyZXNpc3RhbmNlJ107XG4gICAgcmVzaXN0YW5jZVJhdGlvOiBTd2lwZXJPcHRpb25zWydyZXNpc3RhbmNlUmF0aW8nXTtcbiAgICB3YXRjaFNsaWRlc1Byb2dyZXNzOiBTd2lwZXJPcHRpb25zWyd3YXRjaFNsaWRlc1Byb2dyZXNzJ107XG4gICAgd2F0Y2hTbGlkZXNWaXNpYmlsaXR5OiBTd2lwZXJPcHRpb25zWyd3YXRjaFNsaWRlc1Zpc2liaWxpdHknXTtcbiAgICBncmFiQ3Vyc29yOiBTd2lwZXJPcHRpb25zWydncmFiQ3Vyc29yJ107XG4gICAgcHJldmVudENsaWNrczogU3dpcGVyT3B0aW9uc1sncHJldmVudENsaWNrcyddO1xuICAgIHByZXZlbnRDbGlja3NQcm9wYWdhdGlvbjogU3dpcGVyT3B0aW9uc1sncHJldmVudENsaWNrc1Byb3BhZ2F0aW9uJ107XG4gICAgc2xpZGVUb0NsaWNrZWRTbGlkZTogU3dpcGVyT3B0aW9uc1snc2xpZGVUb0NsaWNrZWRTbGlkZSddO1xuICAgIHByZWxvYWRJbWFnZXM6IFN3aXBlck9wdGlvbnNbJ3ByZWxvYWRJbWFnZXMnXTtcbiAgICB1cGRhdGVPbkltYWdlc1JlYWR5OiBTd2lwZXJPcHRpb25zWyd1cGRhdGVPbkltYWdlc1JlYWR5J107XG4gICAgbG9vcDogU3dpcGVyT3B0aW9uc1snbG9vcCddO1xuICAgIGxvb3BBZGRpdGlvbmFsU2xpZGVzOiBTd2lwZXJPcHRpb25zWydsb29wQWRkaXRpb25hbFNsaWRlcyddO1xuICAgIGxvb3BlZFNsaWRlczogU3dpcGVyT3B0aW9uc1snbG9vcGVkU2xpZGVzJ107XG4gICAgbG9vcEZpbGxHcm91cFdpdGhCbGFuazogU3dpcGVyT3B0aW9uc1snbG9vcEZpbGxHcm91cFdpdGhCbGFuayddO1xuICAgIGxvb3BQcmV2ZW50c1NsaWRlOiBTd2lwZXJPcHRpb25zWydsb29wUHJldmVudHNTbGlkZSddO1xuICAgIGFsbG93U2xpZGVQcmV2OiBTd2lwZXJPcHRpb25zWydhbGxvd1NsaWRlUHJldiddO1xuICAgIGFsbG93U2xpZGVOZXh0OiBTd2lwZXJPcHRpb25zWydhbGxvd1NsaWRlTmV4dCddO1xuICAgIHN3aXBlSGFuZGxlcjogU3dpcGVyT3B0aW9uc1snc3dpcGVIYW5kbGVyJ107XG4gICAgbm9Td2lwaW5nOiBTd2lwZXJPcHRpb25zWydub1N3aXBpbmcnXTtcbiAgICBub1N3aXBpbmdDbGFzczogU3dpcGVyT3B0aW9uc1snbm9Td2lwaW5nQ2xhc3MnXTtcbiAgICBub1N3aXBpbmdTZWxlY3RvcjogU3dpcGVyT3B0aW9uc1snbm9Td2lwaW5nU2VsZWN0b3InXTtcbiAgICBwYXNzaXZlTGlzdGVuZXJzOiBTd2lwZXJPcHRpb25zWydwYXNzaXZlTGlzdGVuZXJzJ107XG4gICAgY29udGFpbmVyTW9kaWZpZXJDbGFzczogU3dpcGVyT3B0aW9uc1snY29udGFpbmVyTW9kaWZpZXJDbGFzcyddO1xuICAgIHNsaWRlQ2xhc3M6IFN3aXBlck9wdGlvbnNbJ3NsaWRlQ2xhc3MnXTtcbiAgICBzbGlkZUJsYW5rQ2xhc3M6IFN3aXBlck9wdGlvbnNbJ3NsaWRlQmxhbmtDbGFzcyddO1xuICAgIHNsaWRlQWN0aXZlQ2xhc3M6IFN3aXBlck9wdGlvbnNbJ3NsaWRlQWN0aXZlQ2xhc3MnXTtcbiAgICBzbGlkZUR1cGxpY2F0ZUFjdGl2ZUNsYXNzOiBTd2lwZXJPcHRpb25zWydzbGlkZUR1cGxpY2F0ZUFjdGl2ZUNsYXNzJ107XG4gICAgc2xpZGVWaXNpYmxlQ2xhc3M6IFN3aXBlck9wdGlvbnNbJ3NsaWRlVmlzaWJsZUNsYXNzJ107XG4gICAgc2xpZGVEdXBsaWNhdGVDbGFzczogU3dpcGVyT3B0aW9uc1snc2xpZGVEdXBsaWNhdGVDbGFzcyddO1xuICAgIHNsaWRlTmV4dENsYXNzOiBTd2lwZXJPcHRpb25zWydzbGlkZU5leHRDbGFzcyddO1xuICAgIHNsaWRlRHVwbGljYXRlTmV4dENsYXNzOiBTd2lwZXJPcHRpb25zWydzbGlkZUR1cGxpY2F0ZU5leHRDbGFzcyddO1xuICAgIHNsaWRlUHJldkNsYXNzOiBTd2lwZXJPcHRpb25zWydzbGlkZVByZXZDbGFzcyddO1xuICAgIHNsaWRlRHVwbGljYXRlUHJldkNsYXNzOiBTd2lwZXJPcHRpb25zWydzbGlkZUR1cGxpY2F0ZVByZXZDbGFzcyddO1xuICAgIHdyYXBwZXJDbGFzczogU3dpcGVyT3B0aW9uc1snd3JhcHBlckNsYXNzJ107XG4gICAgcnVuQ2FsbGJhY2tzT25Jbml0OiBTd2lwZXJPcHRpb25zWydydW5DYWxsYmFja3NPbkluaXQnXTtcbiAgICBvYnNlcnZlUGFyZW50czogU3dpcGVyT3B0aW9uc1snb2JzZXJ2ZVBhcmVudHMnXTtcbiAgICBvYnNlcnZlU2xpZGVDaGlsZHJlbjogU3dpcGVyT3B0aW9uc1snb2JzZXJ2ZVNsaWRlQ2hpbGRyZW4nXTtcbiAgICBhMTF5OiBTd2lwZXJPcHRpb25zWydhMTF5J107XG4gICAgYXV0b3BsYXk6IFN3aXBlck9wdGlvbnNbJ2F1dG9wbGF5J107XG4gICAgY29udHJvbGxlcjogU3dpcGVyT3B0aW9uc1snY29udHJvbGxlciddO1xuICAgIGNvdmVyZmxvd0VmZmVjdDogU3dpcGVyT3B0aW9uc1snY292ZXJmbG93RWZmZWN0J107XG4gICAgY3ViZUVmZmVjdDogU3dpcGVyT3B0aW9uc1snY3ViZUVmZmVjdCddO1xuICAgIGZhZGVFZmZlY3Q6IFN3aXBlck9wdGlvbnNbJ2ZhZGVFZmZlY3QnXTtcbiAgICBmbGlwRWZmZWN0OiBTd2lwZXJPcHRpb25zWydmbGlwRWZmZWN0J107XG4gICAgaGFzaE5hdmlnYXRpb246IFN3aXBlck9wdGlvbnNbJ2hhc2hOYXZpZ2F0aW9uJ107XG4gICAgaGlzdG9yeTogU3dpcGVyT3B0aW9uc1snaGlzdG9yeSddO1xuICAgIGtleWJvYXJkOiBTd2lwZXJPcHRpb25zWydrZXlib2FyZCddO1xuICAgIGxhenk6IFN3aXBlck9wdGlvbnNbJ2xhenknXTtcbiAgICBtb3VzZXdoZWVsOiBTd2lwZXJPcHRpb25zWydtb3VzZXdoZWVsJ107XG4gICAgcGFyYWxsYXg6IFN3aXBlck9wdGlvbnNbJ3BhcmFsbGF4J107XG4gICAgdGh1bWJzOiBTd2lwZXJPcHRpb25zWyd0aHVtYnMnXTtcbiAgICB6b29tOiBTd2lwZXJPcHRpb25zWyd6b29tJ107XG4gICAgY2xhc3M6IHN0cmluZztcbiAgICBpZDogc3RyaW5nO1xuICAgIHNldCBuYXZpZ2F0aW9uKHZhbDogYm9vbGVhbiB8IE5hdmlnYXRpb25PcHRpb25zKTtcbiAgICBnZXQgbmF2aWdhdGlvbigpOiBib29sZWFuIHwgTmF2aWdhdGlvbk9wdGlvbnM7XG4gICAgcHJpdmF0ZSBfbmF2aWdhdGlvbjtcbiAgICBzaG93TmF2aWdhdGlvbjogYm9vbGVhbjtcbiAgICBzZXQgcGFnaW5hdGlvbih2YWw6IGJvb2xlYW4gfCBQYWdpbmF0aW9uT3B0aW9ucyk7XG4gICAgZ2V0IHBhZ2luYXRpb24oKTogYm9vbGVhbiB8IFBhZ2luYXRpb25PcHRpb25zO1xuICAgIHByaXZhdGUgX3BhZ2luYXRpb247XG4gICAgc2hvd1BhZ2luYXRpb246IGJvb2xlYW47XG4gICAgc2V0IHNjcm9sbGJhcih2YWw6IGJvb2xlYW4gfCBTY3JvbGxiYXJPcHRpb25zKTtcbiAgICBnZXQgc2Nyb2xsYmFyKCk6IGJvb2xlYW4gfCBTY3JvbGxiYXJPcHRpb25zO1xuICAgIHByaXZhdGUgX3Njcm9sbGJhcjtcbiAgICBzaG93U2Nyb2xsYmFyOiBib29sZWFuO1xuICAgIHNldCB2aXJ0dWFsKHZhbDogYm9vbGVhbiB8IFZpcnR1YWxPcHRpb25zKTtcbiAgICBnZXQgdmlydHVhbCgpOiBib29sZWFuIHwgVmlydHVhbE9wdGlvbnM7XG4gICAgcHJpdmF0ZSBfdmlydHVhbDtcbiAgICBzZXQgaW5kZXgoaW5kZXg6IG51bWJlcik7XG4gICAgc2V0IGNvbmZpZyh2YWw6IFN3aXBlck9wdGlvbnMpO1xuICAgIHNfX2JlZm9yZUJyZWFrcG9pbnQ6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ19iZWZvcmVCcmVha3BvaW50J10+O1xuICAgIHNfX2NvbnRhaW5lckNsYXNzZXM6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ19jb250YWluZXJDbGFzc2VzJ10+O1xuICAgIHNfX3NsaWRlQ2xhc3M6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ19zbGlkZUNsYXNzJ10+O1xuICAgIHNfX3N3aXBlcjogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snX3N3aXBlciddPjtcbiAgICBzX2FjdGl2ZUluZGV4Q2hhbmdlOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydhY3RpdmVJbmRleENoYW5nZSddPjtcbiAgICBzX2FmdGVySW5pdDogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snYWZ0ZXJJbml0J10+O1xuICAgIHNfYXV0b3BsYXk6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ2F1dG9wbGF5J10+O1xuICAgIHNfYXV0b3BsYXlTdGFydDogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snYXV0b3BsYXlTdGFydCddPjtcbiAgICBzX2F1dG9wbGF5U3RvcDogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snYXV0b3BsYXlTdG9wJ10+O1xuICAgIHNfYmVmb3JlRGVzdHJveTogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snYmVmb3JlRGVzdHJveSddPjtcbiAgICBzX2JlZm9yZUluaXQ6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ2JlZm9yZUluaXQnXT47XG4gICAgc19iZWZvcmVMb29wRml4OiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydiZWZvcmVMb29wRml4J10+O1xuICAgIHNfYmVmb3JlUmVzaXplOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydiZWZvcmVSZXNpemUnXT47XG4gICAgc19iZWZvcmVTbGlkZUNoYW5nZVN0YXJ0OiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydiZWZvcmVTbGlkZUNoYW5nZVN0YXJ0J10+O1xuICAgIHNfYmVmb3JlVHJhbnNpdGlvblN0YXJ0OiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydiZWZvcmVUcmFuc2l0aW9uU3RhcnQnXT47XG4gICAgc19icmVha3BvaW50OiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydicmVha3BvaW50J10+O1xuICAgIHNfY2hhbmdlRGlyZWN0aW9uOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydjaGFuZ2VEaXJlY3Rpb24nXT47XG4gICAgc19jbGljazogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snY2xpY2snXT47XG4gICAgc19kb3VibGVUYXA6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ2RvdWJsZVRhcCddPjtcbiAgICBzX2RvdWJsZUNsaWNrOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydkb3VibGVDbGljayddPjtcbiAgICBzX2Rlc3Ryb3k6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ2Rlc3Ryb3knXT47XG4gICAgc19mcm9tRWRnZTogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snZnJvbUVkZ2UnXT47XG4gICAgc19oYXNoQ2hhbmdlOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydoYXNoQ2hhbmdlJ10+O1xuICAgIHNfaGFzaFNldDogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snaGFzaFNldCddPjtcbiAgICBzX2ltYWdlc1JlYWR5OiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydpbWFnZXNSZWFkeSddPjtcbiAgICBzX2luaXQ6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ2luaXQnXT47XG4gICAgc19rZXlQcmVzczogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1sna2V5UHJlc3MnXT47XG4gICAgc19sYXp5SW1hZ2VMb2FkOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydsYXp5SW1hZ2VMb2FkJ10+O1xuICAgIHNfbGF6eUltYWdlUmVhZHk6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ2xhenlJbWFnZVJlYWR5J10+O1xuICAgIHNfbG9vcEZpeDogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snbG9vcEZpeCddPjtcbiAgICBzX21vbWVudHVtQm91bmNlOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydtb21lbnR1bUJvdW5jZSddPjtcbiAgICBzX25hdmlnYXRpb25IaWRlOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWyduYXZpZ2F0aW9uSGlkZSddPjtcbiAgICBzX25hdmlnYXRpb25TaG93OiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWyduYXZpZ2F0aW9uU2hvdyddPjtcbiAgICBzX29ic2VydmVyVXBkYXRlOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydvYnNlcnZlclVwZGF0ZSddPjtcbiAgICBzX29yaWVudGF0aW9uY2hhbmdlOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydvcmllbnRhdGlvbmNoYW5nZSddPjtcbiAgICBzX3BhZ2luYXRpb25IaWRlOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydwYWdpbmF0aW9uSGlkZSddPjtcbiAgICBzX3BhZ2luYXRpb25SZW5kZXI6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ3BhZ2luYXRpb25SZW5kZXInXT47XG4gICAgc19wYWdpbmF0aW9uU2hvdzogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1sncGFnaW5hdGlvblNob3cnXT47XG4gICAgc19wYWdpbmF0aW9uVXBkYXRlOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydwYWdpbmF0aW9uVXBkYXRlJ10+O1xuICAgIHNfcHJvZ3Jlc3M6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ3Byb2dyZXNzJ10+O1xuICAgIHNfcmVhY2hCZWdpbm5pbmc6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ3JlYWNoQmVnaW5uaW5nJ10+O1xuICAgIHNfcmVhY2hFbmQ6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ3JlYWNoRW5kJ10+O1xuICAgIHNfcmVhbEluZGV4Q2hhbmdlOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydyZWFsSW5kZXhDaGFuZ2UnXT47XG4gICAgc19yZXNpemU6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ3Jlc2l6ZSddPjtcbiAgICBzX3Njcm9sbDogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snc2Nyb2xsJ10+O1xuICAgIHNfc2Nyb2xsYmFyRHJhZ0VuZDogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snc2Nyb2xsYmFyRHJhZ0VuZCddPjtcbiAgICBzX3Njcm9sbGJhckRyYWdNb3ZlOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydzY3JvbGxiYXJEcmFnTW92ZSddPjtcbiAgICBzX3Njcm9sbGJhckRyYWdTdGFydDogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snc2Nyb2xsYmFyRHJhZ1N0YXJ0J10+O1xuICAgIHNfc2V0VHJhbnNpdGlvbjogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snc2V0VHJhbnNpdGlvbiddPjtcbiAgICBzX3NldFRyYW5zbGF0ZTogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snc2V0VHJhbnNsYXRlJ10+O1xuICAgIHNfc2xpZGVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ3NsaWRlQ2hhbmdlJ10+O1xuICAgIHNfc2xpZGVDaGFuZ2VUcmFuc2l0aW9uRW5kOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydzbGlkZUNoYW5nZVRyYW5zaXRpb25FbmQnXT47XG4gICAgc19zbGlkZUNoYW5nZVRyYW5zaXRpb25TdGFydDogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snc2xpZGVDaGFuZ2VUcmFuc2l0aW9uU3RhcnQnXT47XG4gICAgc19zbGlkZU5leHRUcmFuc2l0aW9uRW5kOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydzbGlkZU5leHRUcmFuc2l0aW9uRW5kJ10+O1xuICAgIHNfc2xpZGVOZXh0VHJhbnNpdGlvblN0YXJ0OiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydzbGlkZU5leHRUcmFuc2l0aW9uU3RhcnQnXT47XG4gICAgc19zbGlkZVByZXZUcmFuc2l0aW9uRW5kOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydzbGlkZVByZXZUcmFuc2l0aW9uRW5kJ10+O1xuICAgIHNfc2xpZGVQcmV2VHJhbnNpdGlvblN0YXJ0OiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydzbGlkZVByZXZUcmFuc2l0aW9uU3RhcnQnXT47XG4gICAgc19zbGlkZVJlc2V0VHJhbnNpdGlvblN0YXJ0OiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydzbGlkZVJlc2V0VHJhbnNpdGlvblN0YXJ0J10+O1xuICAgIHNfc2xpZGVSZXNldFRyYW5zaXRpb25FbmQ6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ3NsaWRlUmVzZXRUcmFuc2l0aW9uRW5kJ10+O1xuICAgIHNfc2xpZGVyTW92ZTogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snc2xpZGVyTW92ZSddPjtcbiAgICBzX3NsaWRlckZpcnN0TW92ZTogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1snc2xpZGVyRmlyc3RNb3ZlJ10+O1xuICAgIHNfc2xpZGVzTGVuZ3RoQ2hhbmdlOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydzbGlkZXNMZW5ndGhDaGFuZ2UnXT47XG4gICAgc19zbGlkZXNHcmlkTGVuZ3RoQ2hhbmdlOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydzbGlkZXNHcmlkTGVuZ3RoQ2hhbmdlJ10+O1xuICAgIHNfc25hcEdyaWRMZW5ndGhDaGFuZ2U6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ3NuYXBHcmlkTGVuZ3RoQ2hhbmdlJ10+O1xuICAgIHNfc25hcEluZGV4Q2hhbmdlOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWydzbmFwSW5kZXhDaGFuZ2UnXT47XG4gICAgc190YXA6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ3RhcCddPjtcbiAgICBzX3RvRWRnZTogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1sndG9FZGdlJ10+O1xuICAgIHNfdG91Y2hFbmQ6IEV2ZW50RW1pdHRlcjxTd2lwZXJFdmVudHNbJ3RvdWNoRW5kJ10+O1xuICAgIHNfdG91Y2hNb3ZlOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWyd0b3VjaE1vdmUnXT47XG4gICAgc190b3VjaE1vdmVPcHBvc2l0ZTogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1sndG91Y2hNb3ZlT3Bwb3NpdGUnXT47XG4gICAgc190b3VjaFN0YXJ0OiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWyd0b3VjaFN0YXJ0J10+O1xuICAgIHNfdHJhbnNpdGlvbkVuZDogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1sndHJhbnNpdGlvbkVuZCddPjtcbiAgICBzX3RyYW5zaXRpb25TdGFydDogRXZlbnRFbWl0dGVyPFN3aXBlckV2ZW50c1sndHJhbnNpdGlvblN0YXJ0J10+O1xuICAgIHNfdXBkYXRlOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWyd1cGRhdGUnXT47XG4gICAgc196b29tQ2hhbmdlOiBFdmVudEVtaXR0ZXI8U3dpcGVyRXZlbnRzWyd6b29tQ2hhbmdlJ10+O1xuICAgIHNfc3dpcGVyOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBpbmRleENoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj47XG4gICAgc2V0IHByZXZFbFJlZihlbDogRWxlbWVudFJlZik7XG4gICAgX3ByZXZFbFJlZjogRWxlbWVudFJlZjtcbiAgICBzZXQgbmV4dEVsUmVmKGVsOiBFbGVtZW50UmVmKTtcbiAgICBfbmV4dEVsUmVmOiBFbGVtZW50UmVmO1xuICAgIHNldCBzY3JvbGxiYXJFbFJlZihlbDogRWxlbWVudFJlZik7XG4gICAgX3Njcm9sbGJhckVsUmVmOiBFbGVtZW50UmVmO1xuICAgIHNldCBwYWdpbmF0aW9uRWxSZWYoZWw6IEVsZW1lbnRSZWYpO1xuICAgIF9wYWdpbmF0aW9uRWxSZWY6IEVsZW1lbnRSZWY7XG4gICAgc2xpZGVzRWw6IFF1ZXJ5TGlzdDxTd2lwZXJTbGlkZURpcmVjdGl2ZT47XG4gICAgcHJpdmF0ZSBzbGlkZXM7XG4gICAgcHJlcGVuZFNsaWRlczogT2JzZXJ2YWJsZTxTd2lwZXJTbGlkZURpcmVjdGl2ZVtdPjtcbiAgICBhcHBlbmRTbGlkZXM6IE9ic2VydmFibGU8U3dpcGVyU2xpZGVEaXJlY3RpdmVbXT47XG4gICAgc3dpcGVyUmVmOiBTd2lwZXI7XG4gICAgcmVhZG9ubHkgX2FjdGl2ZVNsaWRlczogU3ViamVjdDxTd2lwZXJTbGlkZURpcmVjdGl2ZVtdPjtcbiAgICBnZXQgYWN0aXZlU2xpZGVzKCk6IE9ic2VydmFibGU8U3dpcGVyU2xpZGVEaXJlY3RpdmVbXT47XG4gICAgZ2V0IHpvb21Db250YWluZXJDbGFzcygpOiBzdHJpbmc7XG4gICAgY29udGFpbmVyQ2xhc3Nlczogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKF9uZ1pvbmU6IE5nWm9uZSwgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgX2NoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZiwgX3BsYXRmb3JtSWQ6IGFueSk7XG4gICAgcHJpdmF0ZSBfc2V0RWxlbWVudDtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIHByaXZhdGUgY2hpbGRyZW5TbGlkZXNJbml0O1xuICAgIHByaXZhdGUgc2xpZGVzQ2hhbmdlcztcbiAgICBnZXQgaXNTd2lwZXJBY3RpdmUoKTogYm9vbGVhbjtcbiAgICBpbml0U3dpcGVyKCk6IHZvaWQ7XG4gICAgc3R5bGU6IGFueTtcbiAgICBjdXJyZW50VmlydHVhbERhdGE6IGFueTtcbiAgICBwcml2YXRlIHVwZGF0ZVZpcnR1YWxTbGlkZXM7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlZFBhcmFtczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgdXBkYXRlSW5pdFN3aXBlcihjaGFuZ2VkUGFyYW1zOiBhbnkpOiB2b2lkO1xuICAgIHVwZGF0ZVN3aXBlcihjaGFuZ2VkUGFyYW1zOiBTaW1wbGVDaGFuZ2VzIHwgYW55KTogdm9pZDtcbiAgICBjYWxjTG9vcGVkU2xpZGVzKCk6IG51bWJlcjtcbiAgICB1cGRhdGVQYXJhbWV0ZXIoa2V5OiBhbnksIHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIHNldEluZGV4KGluZGV4OiBudW1iZXIsIHNwZWVkPzogbnVtYmVyLCBzaWxlbnQ/OiBib29sZWFuKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19